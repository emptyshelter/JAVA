package com.itwill.member;

import java.util.ArrayList;

/*
회원관리업무를 수행할객체(Service,Manager)
	- 회원관리업무 수행객체
	- 회원관리업무 수행시 Data Access에관련된작업을
	  MemberDao를 호출해 CRUD를 수행한다. 
*/
public class MemberService {
	
	//private static MemberService _instance; 
	private MemberDao memberDao;
	public MemberService() throws Exception{
		memberDao=new MemberDao();
	}
	/*
	public static MemberService getInstance() throws Exception {
		if(_instance==null) {
			_instance=new MemberService();
		}
		return _instance;
	}
	*.
	/*
	 * 회원가입
	 */
	public boolean memberRegister(Member addMember) throws Exception{
		boolean isSuccess=false;
		if (!memberDao.isDuplicateId(addMember.getId())) {
			memberDao.create(addMember);
			isSuccess= true	;
		}
		return isSuccess;
	}
	/*
	 *회원로그인
	 */
	public int login(String id,String password) throws Exception{
		/*
		 * 1.회원존재여부
		 */
		int result=0;
		/*
		 * 0:성공
		 * 1:아이디존재안함
		 * 2:패쓰워드불일치
		 */
		Member member = memberDao.readOne(id);
		if (!member.equals(id)) {
			result = 1;
		}
				
		return result;
	}
	
	/*
	 * 회원로그아웃
	 */
	
	/*
	 * 회원상세보기(회원1명 no 로 찾기)
	 */
	
	/*
	 * 회원상세보기(회원1명  id 로 찾기)
	 */
	public Member findById(String id) throws Exception{
		Member member=memberDao.readOne(id);
		return member;
	}
	/*
	 * 회원리스트(회원여러명 전체찾기)
	 * 회원리스트(회원여러명 이름으로찾기)
	 * 회원리스트(회원여러명 주소로찾기)
	 * 회원리스트(회원여러명 나이로찾기)
	 */
	public ArrayList<Member> findMemberByAll() throws Exception{
		ArrayList<Member> findMemberList=new ArrayList<Member>();
		findMemberList= memberDao.readAll();
		return findMemberList;
	}
	/*
	 * 회원수정
	 */
	public void updateMember(Member updateMember) throws Exception{
		memberDao.update(updateMember);
	}
	/*
	 * 회원탈퇴
	 */
	public void deleteMember(int no)throws Exception {
		
	}
	public void deleteMember(String id) throws Exception{
		memberDao.delete(id);
	}
}
