package paint;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;
import java.awt.Graphics;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

public class PaintFrame extends JFrame {

	private JPanel contentPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					PaintFrame frame = new PaintFrame();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public PaintFrame() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		contentPane.setLayout(new BorderLayout(0, 0));
		setContentPane(contentPane);
	}
	/*
	/*
	public void paint(Graphics g)
		- Paints this component.
		- This method is called 
		   when the contents of the component should be painted; 
		   such as when the component is first being shown 
		   or is damaged and in need of repair. 
		- The clip rectangle in the Graphics parameter is set to the area which needs to be painted. 
		- Subclasses of Component that override this method 
		   need not call super.paint(g).
	 
	   - 이 컴포넌트를 그립니다.
	   - 이 메소드는, 컴퍼넌트의 컨텐츠를 페인트 할 필요가있는 경우에 불려갑니다. 
	      구성 요소가 처음 표시되거나 
	      손상되어 수리가 필요할 때와 같이.
	   - Graphics 매개 변수의 클립 사각형은 칠해야 할 영역으로 설정됩니다.
	   - 이 메소드를 오버라이드 (override)하는 Component 서브 클래스는 super.paint (g)를 호출 할 필요는 없습니다.
	 */
	
	@Override
	public void paint(Graphics g) {
		super.paint(g);;
		System.out.println("paint"+Thread.currentThread().getName());
		/*
		 * <<Graphics>>
		 * - 프레임에 그릴수있는 팬객체
		 */
		//문자
		String str = "Hello Java!!!";
		g.drawString(str, 80, 50);
		//라인
		g.setColor(Color.RED);
		g.drawLine(0, 80, this.getWidth(), 80);
		//사각형
		g.setColor(Color.PINK);
		g.drawRect(20, 90, 50, 50);
		g.setColor(Color.BLUE);
		g.fillRect(20, 150, 50, 50);
		//원
		g.setColor(Color.GREEN);
		g.drawOval(20, 210, 50, 50);
		g.fillOval(40, 150, 50, 50);
	}

}
